# Арсенал героя 3.0
# Демонстрирует работу со списками
# создадим список с несколькими элементами и выведем его с помощью цикла for

inventory = ["меч", "кольчуга", "щит", "целебное снадобье"]
print("\nИтак в нашем арсенале:")
for item in inventory:
    print(item)
# найдем длинну списка
print("Сейчас в вашем распоржении", len(inventory), "предмета/ов")
# проверка на принадлежность
if "целебное снадобье" in inventory:
    print("Вы еще поживете и повоюете")
# вывод одного элемента с определенным индексом
index = int(input("\nВведите индекс одного из предметов арсенала:"))
print("Под индексом", index, "в арсенале находится", inventory[index])
# отобразим срез
start = int(input("\nВведите начальный индекс среза: "))
finish = int(input("\nВведите конечный индекс среза: "))
print("Срез inventory[", start, ":", finish, "]", " - это", end=' ')
print(inventory[start:finish])
# сцепление списков
chest = ["золото", "драгоценные камни"]
print("Вы нашли ларец. Вот что в нем есть")
print(chest)
print("Вы приобщили содержимое ларца к своему арсеналу")
inventory += chest
print("Теперь в вашем распоряжении")
print(inventory)
# присваивание значение элемента по индексу
print("Вы обменяли меч на арбалет")
inventory[0] = "арбалет"
print("Теперь ваш арсенал содержит ")
print(inventory)
# приписываем значения элементам по срезу индексов
print("За золото и драгоценные камни вы купили магический кристалл,"
      " способный предсказывать будещее")
inventory[4:6]=["магический кристал"]
print("Теперь ваш арсенал содержит ")
print(inventory)
# удаление элемента
print("В тяжелом бою вам раздроблен ваш щит")
del inventory[2]
print('Вот что осталось')
print(inventory)
# удаление среза
print("Воры лишили вас арбалета и кольчуги")
del inventory[:2]
print("В вашем арсенале")
print(inventory)



# Рекорды
# Демонстрирует списочные методы

scores = []
choise = None
while choise != "0":
    print("""
        Рекорды
        0 - Выйти
        1 - Показать рекорды
        2 - Добавить рекорд
        3 - Удалить рекорд
        4 - Сортировать список
        """)
    choise = input("Ваш выбор")
    if choise == "0":
        print("До свидания")
    # вывод лучших результатов на экран
    elif choise == "1":
        print("Рекорды")
        for score in scores:
            print(score)
    # добавление рекорда
    elif choise == "2":
        score = input("Впишите свой рекорд ")
        scores.append(score)
    # удаление рекорда
    elif choise == "3":
        score = input("Какой из рекордов удалить? ")
        if score in scores:
            scores.remove(score)
        else:
            print("Результат", score, "не содержится в списке рекордов")
    elif choise == "4":
         scores.sort(reverse=True)
    # непонятный пользовательский ввод
    else:
        print("Извините в меню нет пункта", choise)
    

# Рекорды 2.0
# Демонстрирует вложенные последовательности

scores = []
choise = None
while choise != "0":
    print("""
    Рекорды 2.0
    0 - Выйти
    1 - Показать рекорды
    2 - Добавить рекорд
    """)
    choise = input("Ваш выбор ")
    # выход
    if choise == "0":
        print("До свидания")
    # показать рекорды
    elif choise == "1":
        print("Рекорды\n")
        print("ИМЯ\tРЕЗУЛЬТАТ")
        for entry in scores:
            score, name = entry
            print(name, "\t", score)
    # добавить рекорд
    elif choise == "2":
        name = input("Впишите имя игрока")
        score = int(input("Впишите его результат"))
        entry = (score, name)
        scores.append(entry)
        scores.sort(reverse=True)
        scores = scores[:5]# в списке только 5 рекордов
    # непонятный пользовательский ввод
    else:
        print("Извините в меню нет пункта", choise)
    

# Переводчик с гикского на русский
# Демонстрирует использование словарей

geek = {
    "404": "Не знать. не владеть информацией. От сообщения об ошибке 404 'Страница не найдена'.",
    "Googling": "'Гугление·. nоиск в Сети сведений о ком-либо.",
    "Keyboard Plaque" : "Мусор. который скапливается в клавиатуре "
                            "компьютера.",
    "Link Rot" : "Процесс устаревания гиперссылок на веб-страницах. ",
    "Percussive Maintenance" : "О ситуации. когда кто-либо бьет по корпусу"
                                   " не-исправного электронного прибора в надежде восстановить его работу",}
print(geek.get("Dancing", "Понятия не имею"))

choiсe = None
while choiсe != "0":
    print("""
    Переводчик с гикского на русский
    0 - Выйти
    1 - Найти толкование термина
    2 - Добавить толкование
    3 - Изменить толковани
    4 - Удалить толкование
    """)
    choiсe = input("Ваш выбор ")
    # выход
    if choiсe == "0":
        print("До свидания")
    # поиск толкования
    elif choiсe == "1":
        term = input("Введите какой термин вы хотите перевести с гикского на русский")
        if term in geek:
            definition = geek[term]
            print("\n",term,'означает', definition)
        else:
            print("Увы такой термин мне не знаком")
    # добавление термина с толкованием
    elif choiсe == "2":
        term = input("Какой термин гикского языка вы хотите добавить?")
        if term not in geek:
            definition = input("Впишите ваше толкование")
            geek[term] = definition
            print("\nТермин", term, "добавлен в словарь")
        else:
            print("Такой термин уже есть")
    # новое толкование известного термина
    elif choiсe == "3":
        term = input("Введите термин который хотите переопределить")
        if term in geek:
            definition = input("Введите свое толкование")
            geek[term] = definition
            print("Термин переопределен")
    # удаление термина с его толкованием
    elif choiсe == "4":
        term = input("Какой термин вы хотите удалить")
        if term in geek:
            del geek[term]
            print("\nТермин", term, "удален")
        else:
            print("Такого термина нет")
        # непонятный пользовательский ввод
    else:
        print("Извините в меню нет пункта", choise)


# Виселица
#Классическая игра "Виселица". Компьютер случайным образом выбирает слово.
#которое игрок должен отгадать буква за буквой. Если игрок не сумеет
# отгадать за отведенное количество попыток.
# на экране появится фигурка повешенного.
import random
HANGMAN = (
    """
    ------
    |    |
    |
    |
    |
    |
    |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0 |
    |
    |
    |
    |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0  |  -+-
    |
    |
    |
    |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0  |  /-+-
    |
    |
    |
    |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0  |  /-+-/
    |
    |
    |
    |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0  |  /-+-/
    |    |
    |
    |
    |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0  |  /-+-/
    |    |
    |    |
    |   |
    |   |
    |
    |
    -----------
    """,
    """
    ------
    |    |
    |    0  |  /-+-/
    |    |
    |    |
    |   | |
    |   | |
    |
    |
    -----------
    """,)
MAX_WRONG = len(HANGMAN) - 1
WORDS = ("OVERUSED","CLAM","GUAM","TAFFETA","PYTHON")

# инициализация переменных
word = random.choice(WORDS) # слово для отгадывания
so_far = "-"*len(word) # по одному дефису на букву которую нужно угадать
wrong = 0 # количечтво ошибок которые сделал игрок
used = [] # буквы которые игрок уже предлагал
# создание основного цыкла который продолжается до выиграша или до того
# момента когда совершено слишком много ошибок
print("Добро пожаловать в игру 'Виселица'. Удачи вам!")
while wrong < MAX_WRONG and so_far != word:
    print(HANGMAN[wrong])
    print("\nВы уже предлагали следующие буквы:\n", used)
    print("\nОтгаданое вами в слове сейчас выглядит так:\n", so_far)
    guess = input("\n\nВведите букву: ")
    guess = guess.upper()
    while guess in used:
        print("Вы уже предлагали букву", guess)
        guess = input("\n\nВведите букву")
        guess = guess.upper()
    used.append(guess)
    if guess in word:
        print("\nДа! Буква", guess, "есть в слове!")
        # новая строка so_far с отгаданой буквой
        new = ""
        for i in range(len(word)):
            if guess == word[i]:
                new += guess
            else:
                new +=so_far[i]
        so_far = new
    else:
        print("\nК сожелению, буквы", guess, "нет в слове")
        wrong +=1
if wrong == MAX_WRONG:
    print(HANGMAN[wrong])
    print("Вас повесили!")
else:
    print("Вы отгадали!")
print("Было загадано слово", word)

# Программа выводит список слов в случайном порядке без повторения

WORDS = ["OVERUSED","CLAM","GUAM","TAFFETA","PYTHON"]
while len(WORDS) != 0:
    index = random.randint(0,len(WORDS)-1)
    print("Случайное слово из списка ", WORDS[index])
    del WORDS[index]
    
# Программа 'Генератор персонажей'
# Пользователю предоставлено 30 пунктов которые можно распределить между
# четырьмя характеристиками
points = 30
characteristics = { "сила": 0,
                    "здоровье": 0,
                    "мудрость": 0,
                    "ловкость": 0 }
check = None
while True:
    print("У вас ", points, "пунктов")
    print("""
    0 - Выйти
    1 - Просмотерть значение харатеристик
    2 - Увеличить характеристику
    3 - Уменьшить характеристику
    4 - Обнулить характеристики
    """)
    choise = input("Введите что хотите сделать:")
    if choise == "0":
        print("Выход")
        break
    elif choise == "1":
        print(characteristics.items())
    elif choise == "2":
        item = input("Введите характеристику которую хотите улучшить"
                     " (Сила, Здоровье, Мудрость, Ловкость): ")
        while item.lower() not in characteristics:
            item = input("Такой характеристики нет. Введите характеристику которую хотите улучшить"
                     " (Сила, Здоровье, Мудрость, Ловкость): ")
        val = int(input("Введите на сколько пунктов увеличить характеристику: "))
        while val > points:
            print("У вас только", points,"пункотов")
            val = int(input("Введите на сколько пунктов увеличить характеристику: "))
        characteristics[item] += val
        points -= val
        print('Характеристика', item ,"увеличена на ", val)
    elif choise == "3":
        item = input("Введите характеристику которую хотите уменьшить"
                     " (Сила, Здоровье, Мудрость, Ловкость): ")
        while item.lower() not in characteristics:
            item = input("Такой характеристики нет. Введите характеристику которую хотите уменьшить"
                     " (Сила, Здоровье, Мудрость, Ловкость): ")
        val = int(input("Введите на сколько пунктов уменьшить характеристику:"))
        while val > points:
            print("У вас только", points,"пункотов")
            val = int(input("Введите на сколько пунктов уменьшить характеристику: "))
        characteristics[item] -= val
        points += val
        print('Характеристика', item ,"уменьшена на ", val)
    elif choise == "4":
        points = 30
        for key in characteristics.keys():
            characteristics[key] = 0
    else:
        print("Нет такого действия")

# Программа "Кто твой папа?"
# Пользователь вводит имя человека а программа отца этого человека.
# Так же пользователь может добавлять и удалять пары отец-сын
Relatives = {
    "бруклин джозеф": "дэвид бекхэм",
    "шайло Питт":"брэд питт",
    "джордж кембриджский":"луи кембриджский",
    "оливер хадсон":"билл хадсон",
    "андрей арсеньевич тарковский":"арсений александрович тарковский ",
}
while True:
    print("""
    Введите цыфру которая означает что вы хотите сдеалть
    0 - Выйти
    1 - Посмотреть список отцов и детей
    2 - Узнать конкретную пару
    3 - Добавить пару сын-отец
    4 - Удалить пару сын-отец
    """)
    act = input()
    if act == "0":
        print("Выход")
        break
    elif act == "1":
        for item in Relatives.items():
            print("CЫН\tОТЕЦ")
            print(item[0],"\t",item[1])
    elif act == "2":
        key = input("Введите имя сына/дочери чтобы узанть его/ее отца")
        while key.lower() not in Relatives:
            key = input("Такого имени нет. Введите другое имя сына/дочери чтобы узанть его/ее отца")
        print("Отец ", key, "это ", Relatives[key])
    elif act == "3":
        father = input("Введите имя отца которое хотите добавить")
        son = input("Введите имя сына которое хотите добавить")
        Relatives[son.lower()] = father.lower()
        print("Вы добавили пару", father, Relatives[son])
    elif act == "4":
        son = input("Введите имя сына которое хотите удалить")
        print("Вы удалили пару", father, Relatives[father])
        del Relatives[son]
    else:
        print("Такого действия нет")



# Программа "Кто твой папа?" с дедами
# Пользователь вводит имя человека а программа отца этого человека.(а так же деда)
# Так же пользователь может добавлять и удалять пары отец-сын(дед)
Relatives = {
    "бруклин джозеф": ("дэвид бекхэм","батя девида бекхэма"),
    "шайло питт":("брэд питт","батя бредпита"),
    "джордж кембриджский":("луи кембриджский","батя луи"),
    "оливер хадсон":("билл хадсон","батя билахадсона"),
    "андрей арсеньевич тарковский":("арсений александрович тарковский ","батя тарковскогостаршего")
}
while True:
    print("""
    Введите цыфру которая означает что вы хотите сдеалть
    0 - Выйти
    1 - Посмотреть список отцов и детей
    2 - Узнать конкретную пару
    3 - Добавить пару сын-отец
    4 - Удалить пару сын-отец
    5 - Посмотреть список дедов и внуков
    6 - Узнать конкретную пару дед внук
    7 - Добавить пару внук-дед
    8 - Удалить пару внук-дед
    """)
    act = input()
    if act == "0":
        print("Выход")
        break
    elif act == "1":
        for item in Relatives.items():
            print("CЫН\tОТЕЦ")
            print(item[0],"\t",item[1][0])
    elif act == "2":
        key = input("Введите имя сына/дочери чтобы узанть его/ее отца")
        while key.lower() not in Relatives:
            key = input("Такого имени нет. Введите другое имя сына/дочери чтобы узанть его/ее отца")
        print("Отец ", key, "это ", Relatives[key])
    elif act == "3":
        father = input("Введите имя отца которое хотите добавить")
        son = input("Введите имя сына которое хотите добавить")
        Relatives[son.lower()] = father.lower()
        print("Вы добавили пару", son, Relatives[son])
    elif act == "4":
        son = input("Введите имя сына которое хотите удалить")
        print("Вы удалили пару", son, Relatives[son])
        del Relatives[son]
    elif act == "5":
        for item in Relatives.items():
            print("CЫН\tОТЕЦ")
            print(item[0],"\t",item[1][1])
    elif act == "6":
        key = input("Введите имя сына/дочери чтобы узанть его/ее дед")
        while key.lower() not in Relatives:
            key = input("Такого имени нет. Введите другое имя сына/дочери чтобы узанть его/ее деда")
        print("Дед", key, "это ", Relatives[key][1])
    elif act == "7":
        grandfather = input("Введите имя деда которое хотите добавить")
        father = input("Введите имя отца которое хотите добавить")
        son = input("Введите имя сына которое хотите добавить")
        Relatives[son.lower()] = (father.lower(),grandfather.lower())
        print("Вы добавили пару", son, Relatives[son])
    elif act == "8":
        son = input("Введите имя сына которое хотите удалить")
        print("Вы удалили пару", son, Relatives[son][1])
        del Relatives[son]
    else:
        print("Такого действия нет")
