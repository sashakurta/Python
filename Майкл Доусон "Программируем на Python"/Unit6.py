# Инструкция
# Демонстрирует, как создавать собственные функции
def instructions():
    """Выводит на экран инструкцию для игрока"""
    print("""
    Добро пожаловать на ринг грандиознейших интеллектуальных состязаний всех времен.
    Твой мозг и мой процессор сойдутся в схватке за доской игры "Крестики-нолики".
    Чтобы сделать ход. введи число от О до 8. Числа однозначно соответствуют полям доски - так. как показано ниже:
    0 | 1 | 2
    ---------
    3 | 4 | 5
    ---------
    6 | 7 | 8
    Приготовься к бою. жалкий белковый человечишка. Вот-вот начнется решающее сражение. \n
    """)
# основная часть
print("Это инструкция для игры в 'Крестики-Нолики'")
instructions()
input()
print("Это опять та же инструкция")
instructions()
print("Надеюсь теперь смысл игры ясен")

# Принимай - возвращай
# Демонстрирует параметры и возвращаемые значения
def display(message):
    print(message)
def give_me_five():
    return 5,6,7
def ask_y_n():
    """Задает вопрос с ответом 'да' или 'нет'"""
    display("\nПожалуйста введите 'y' или 'n'")
    response = None
    while response not in ("y","n"):
        response = input("\nПожалуйста введите 'y' или 'n'").lower()
    return response
# основная часть
display("Вам сообщение")
number = give_me_five()
print(number)
answer = ask_y_n()
print(answer)

# День рождения
# Демонстрирует именованные аргументы и значения параметров по умолчанию
# позиционные параметры
def birthday(name, age):
    print("С днем рождения,", name,"! Вам сегодня исполняется", age,"не так ли?\n")
# параметры со значениями по умолчанию
def birthday2(name = "товарищ Иванов", age = 1):
    print("С днем рождения.",name, "!","Вам сегодня исполняется", age, "не так ли?\n")
birthday("товарищь Иванов",1)
birthday(1,"товаришь Иванов")
birthday(name="товаришь Иванов", age=1)
birthday(age=1,name="товаришь Иванов")
birthday2()
birthday2(name="Katya")
birthday2(age=12)
birthday2(name="Katya" , age=12)
birthday2("Katya",12)
birthday2(12,"Katya")

# Доступ отовсюду
# Демонстрирует работу с глобальными переменными
def read_global():
    print("В области видимости функции read_global()"
          " значение value равно", value)
def shadow_global():
    value = -10
    print("В области видимости функции read_global()"
          " значение value равно",value)
def change_global():
    global value
    value = -10
    print("В области видимости функции read_global()"
          " значение value равно", value)
# основная часть
value = 10
print("B глобальной области видимости значение переменной"
      " value сейчас стало равным", value, "\n")
read_global()
print("Bернемся в глобальную область видимости."
      " Значение переменной"
      " value равно", value, "\n")
shadow_global()
print("Bернемся в глобальную область видимости."
      " Значение переменной"
      " value равно", value, "\n")
change_global()
print("Вернемся в глобальную область видимости. "
      "Значение value изменилось на", value)
























